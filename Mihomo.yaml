# 机场订阅，名称不能重复
proxy-providers:
  AirTCP:
    type: http
    interval: 1800
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 🚀 节点选择
    url: "http://123.207.61.35:3389/link/oI4s7LdVPBpBZvYR?sub=3"
    override:
      additional-prefix: "①"   # 为代理节点添加指定的名称前缀。例：源名称，序号等
  OneCent:
    type: http
    interval: 1800
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 🟢 直连
    url: "https://dash.yfjc.xyz/api/v1/client/subscribe?token=30a722a7f66fd620b775c043f6de03a3&flag=meta"
    override:
      additional-prefix: "②"   # 为代理节点添加指定的名称前缀。例：源名称，序号等
      
# 用于下载订阅时指定UA
global-ua: clash.meta
    
# 全局配置
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
ipv6: false
allow-lan: true
unified-delay: true
tcp-concurrent: true
  
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 48
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"
  
# 控制面板
external-controller: 0.0.0.0:9090
secret: ""
external-ui: ui
external-ui-url: "https://ghp.ci/https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

# 匹配进程 always/strict/off
find-process-mode: strict
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 30

# 策略组选择和fakeip缓存
profile:
  store-selected: true
  store-fake-ip: true
  
# 流量嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - "Mijia Cloud"
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"
    
# 代理模式
tun:
  enable: true
  stack: mixed
  mtu: 9000
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
# DNS模块
dns:
  enable: true
  prefer-h3: true
  use-hosts: true
  use-system-hosts: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  # 模式切换 redir-host / fake-ip
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  # 模式切换 whitelist/blacklist 
  # 黑名单模式表示如果匹配成功则不返回 Fake-IP, 白名单模式时只有匹配成功才返回 Fake-IP
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "+.lan"
    - "+.local"
    - rule-set:tracker_domain
    - geosite:private
    - geosite:cn
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  proxy-server-nameserver:
    - 223.5.5.5
    - 119.29.29.29
    - https://1.1.1.1/dns-query
    - https://9.9.9.9/dns-query
    - https://101.101.101.101/dns-query
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver-policy:
    'rule-set:private_domain,cn_domain':
    - 223.5.5.5
    - 119.29.29.29
    'rule-set:geolocation-!cn':
    - https://dns.cloudflare.com/dns-query
    - https://1.1.1.1/dns-query
    - https://dns.google/dns-query
    - https://dns.twnic.tw/dns-query
    - https://dns.adguard.com/dns-query
    - https://208.67.222.222/dns-query
    - https://doh.sb/dns-query
    - https://hk-hkg.doh.sb/dns-query
    - https://9.9.9.9/dns-query
    - https://101.101.101.101/dns-query

# Host
#hosts:
  #'+.audiences.me': 104.18.165.35
  #'+.hdfans.org': 104.18.165.35

proxies:
- name: "🟢 直连"
  type: direct
  udp: true
 
# 锚点
pr: &pr {type: select, proxies: [🚀 节点选择, 🔯 香港故转, 🔯 日本故转, ♻️ 香港自动, ♻️ 日本自动, ♻️ 香港低倍自动, ♻️ 台湾低倍自动, ♻️ 韩国低倍自动, ♻️ 日本低倍自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇹🇼 台湾节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🎮 游戏节点, 🌐 全部节点, 🟢 直连]}
# 策略组
proxy-groups:
  - {name: 🚀 节点选择, type: select, proxies: [🔯 香港故转, 🔯 日本故转, ♻️ 香港低倍自动, ♻️ 台湾低倍自动, ♻️ 韩国低倍自动, ♻️ 日本低倍自动,  ♻️ 香港自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇹🇼 台湾节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🇸🇬 狮城节点, 🇺🇲 美国节点, 🌐 全部节点, 🟢 直连]}
  - {name: 🍎 Apple, type: select, proxies: [🟢 直连, 🚀 节点选择, 🇭🇰 香港节点, 🇹🇼 台湾节点, 🇸🇬 狮城节点]}
  - {name: 🍎 Apple媒体, type: select, proxies: [🟢 直连, 🚀 节点选择, 🇭🇰 香港节点, 🇹🇼 台湾节点, 🇸🇬 狮城节点]}
  - {name: 📹 YouTube,!!merge <<: *pr}
  - {name: 🍀 Google,!!merge <<: *pr}
  - {name: 🤖 ChatGPT, type: select, proxies: [🤖️ AI节点, 🟢 直连]}
  - {name: 👨🏿‍💻 GitHub,!!merge <<: *pr}
  - {name: 🎮 GameDownload, type: select, proxies: [🟢 直连, 🚀 节点选择]}
  - {name: 🎮 游戏代理, type: select, proxies: [🟢 直连, 🎮 游戏节点]}
  - {name: 🎮 游戏平台,!!merge <<: *pr}
  - {name: 🌐 Tracker, type: select, proxies: [🟢 直连, 🚀 节点选择]}
  - {name: 🐬 OneDrive,!!merge <<: *pr}
  - {name: 🪟 Microsoft,!!merge <<: *pr}
  - {name: 🎵 TikTok,!!merge <<: *pr}
  - {name: 🛍️ DMM, type: select, proxies: [♻️ 日本低倍自动, 🇯🇵 日本节点, ♻️ 日本自动, 🔯 日本故转, 🟢 直连]}
  - {name: 📲 Telegram,!!merge <<: *pr}
  - {name: 🎥 NETFLIX,!!merge <<: *pr}
  - {name: ✈️ Speedtest,!!merge <<: *pr}
  - {name: 💶 PayPal,!!merge <<: *pr}
  - {name: 🎯 全球直连, type: select, proxies: [🟢 直连, 🚀 节点选择]}
  - {name: ❌ 禁止连接, type: select, hidden: true, proxies: [REJECT]}
  - {name: 🐟 漏网之鱼,!!merge <<: *pr}
  - {name: 🇭🇰 香港节点, type: select, icon: "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Hong_Kong.png", include-all: true, filter: "(?i)港|HK|hk|Hong Kong|HongKong|hongkong"}
  - {name: 🇹🇼 台湾节点, type: select, icon: "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Taiwan.png", include-all: true, filter: "(?i)台|新北|彰化|TW|Taiwan"}
  - {name: 🇯🇵 日本节点, type: select, icon: "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Japan.png", include-all: true, filter: "(?i)日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan"}
  - {name: 🇰🇷 韩国节点, type: select, icon: "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Korea.png", include-all: true, filter: "(?i)KR|Korea|KOR|首尔|韩|韓"}
  - {name: 🇸🇬 狮城节点, type: select, icon: "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Singapore.png", include-all: true, filter: "(?i)新加坡|坡|狮城|SG|Singapore"}
  - {name: 🇺🇲 美国节点, type: select, icon: "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/United_States.png", select, include-all: true, filter: "(?i)美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States"}
  - {name: 🎮 游戏节点, type: select, include-all: true, filter: "(?i)游戏|🎮|低延迟"}
  - {name: 🤖️ AI节点, type: select, include-all: true, filter: "^((?!(港|HK|(?i)Hong)).)*$"}
  - {name: 🔯 香港故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美|国外|X1.5|X2|X2.5|X3|X3.5|X4)).)*$"}
  - {name: 🔯 日本故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美|国外|X1.5|X2|X2.5|X3|X3.5|X4)).)*$" }
  - {name: ♻️ 香港自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"}
  - {name: ♻️ 香港低倍自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(?=.*(港|HK|Hong))^((?!(台|日|韩|新|深|美|国外|X1.5|X2|X2.5|X3|X3.5|X4)).)*$"}
  - {name: ♻️ 台湾低倍自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(?=.*(台|TW|Taiwan))^((?!(港|日|韩|新|深|美|国外|X1.5|X2|X2.5|X3|X3.5|X4)).)*$"}
  - {name: ♻️ 韩国低倍自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(?=.*(KR|Korea|KOR|首尔|韩|韓))^((?!(港|日|台|新|深|美|国外|X1.5|X2|X2.5|X3|X3.5|X4)).)*$"}
  - {name: ♻️ 日本低倍自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(?=.*(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan))^((?!(港|韩|台|新|深|美|国外|X1.5|X2|X2.5|X3|X3.5|X4)).)*$"}
  - {name: ♻️ 日本自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$" }
  - {name: ♻️ 美国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(美|US|(?i)States|America))^((?!(港|台|日|韩|新)).)*$"}
  - {name: ♻️ 自动选择, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "^((?!(直连|超时|官网)).)*$"}
  - {name: 🌐 全部节点, type: select, include-all: true, filter: "^((?!(超时|官网)).)*$"}
rules:
  - RULE-SET,private_domain,🟢 直连
  - RULE-SET,zhilian,🟢 直连
  - RULE-SET,tracker_domain,🌐 Tracker
  - RULE-SET,appletv,🍎 Apple媒体
  - RULE-SET,applemusic,🍎 Apple媒体
  - RULE-SET,apple,🍎 Apple
  - RULE-SET,proxylite,🚀 节点选择
  - RULE-SET,daili,🚀 节点选择
  - RULE-SET,adblock,❌ 禁止连接
  - RULE-SET,direct1,🎯 全球直连
  - RULE-SET,gamedownload1,🎮 GameDownload
  - RULE-SET,gamedownload2,🎮 GameDownload
  - RULE-SET,gamedownload3,🎮 GameDownload
  - RULE-SET,game_domain1,🎮 游戏平台
  - RULE-SET,game_domain2,🎮 游戏平台
  - RULE-SET,game_domain3,🎮 游戏平台
  - RULE-SET,game_domain4,🎮 游戏平台
  - RULE-SET,game_domain5,🎮 游戏平台
  - RULE-SET,game_domain6,🎮 游戏平台
  - RULE-SET,forzahorizon5,🎮 游戏代理
  - RULE-SET,ai,🤖 ChatGPT
  - RULE-SET,ai2,🤖 ChatGPT
  - RULE-SET,ai3,🤖 ChatGPT
  - RULE-SET,github_domain,👨🏿‍💻 GitHub
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,google_domain,🍀 Google
  - RULE-SET,onedrive_domain,🐬 OneDrive
  - RULE-SET,microsoft_domain,🪟 Microsoft
  - RULE-SET,dmm_domain,🛍️ DMM
  - RULE-SET,tiktok_domain,🎵 TikTok
  - RULE-SET,speedtest_domain,✈️ Speedtest
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,netflix_domain,🎥 NETFLIX
  - RULE-SET,paypal_domain,💶 PayPal
  - RULE-SET,geolocation-!cn,🚀 节点选择
  - RULE-SET,cn_domain,🎯 全球直连
  - RULE-SET,google_ip,🍀 Google,no-resolve
  - RULE-SET,netflix_ip,🎥 NETFLIX,no-resolve
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,cn_ip,🎯 全球直连
  - MATCH,🐟 漏网之鱼
rule-anchor:
  ip: &ip {type: http, interval: 43200, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 43200, behavior: domain, format: mrs}
  qcy: &qcy {type: http, interval: 43200, behavior: domain, format: text}
  class: &class {type: http, interval: 43200, behavior: classical, format: text}
rule-providers: 
  private_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  proxylite: {!!merge <<: *class, url: "https://raw.githubusercontent.com/seassxasc/myrule/refs/heads/main/ProxyLite.list"}
  daili: {!!merge <<: *class, url: "https://github.com/julianaexx/sdd/raw/refs/heads/main/jiedian.list"}
  tracker_domain: {!!merge <<: *class, url: "https://github.com/julianaexx/sdd/raw/refs/heads/main/PTTracker.list"}
  zhilian: {!!merge <<: *class, url: "https://github.com/julianaexx/sdd/raw/refs/heads/main/zhilian.list"}
  direct1: {!!merge <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Download.list"}
  gamedownload1: {!!merge <<: *class, url: "https://raw.githubusercontent.com/julianaexx/sdd/refs/heads/main/steam.list"}
  gamedownload2: {!!merge <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Game/GameDownload/GameDownload.list"}
  gamedownload3: {!!merge <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Game/GameDownloadCN/GameDownloadCN.list"}
  game_domain1: {!!merge <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Steam/Steam.list"}
  game_domain2: {!!merge <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/EA/EA.list"}
  game_domain3: {!!merge <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Epic/Epic.list"}
  game_domain4: {!!merge <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Sony/Sony.list"}
  game_domain5: {!!merge <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/UBI/UBI.list"}
  game_domain6: {!!merge <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Xbox/Xbox.list"}
  forzahorizon5: {!!merge <<: *class, url: "https://github.com/julianaexx/sdd/raw/refs/heads/main/ForzaHorizon5.list"}
  adblock: {!!merge <<: *domain, url: "https://github.com/peiyingyao/Rule-for-OCD/raw/refs/heads/master/rule/Clash/Advertising/Advertising_OCD_Domain.mrs"}
  ban: {!!merge <<: *class, url: "https://github.com/julianaexx/sdd/raw/refs/heads/main/ban.list"}
  ai: {!!merge <<: *class, url: "https://github.com/blackmatrix7/ios_rule_script/raw/refs/heads/master/rule/Clash/OpenAI/OpenAI.list"}
  ai2: {!!merge <<: *class, url: "https://github.com/blackmatrix7/ios_rule_script/raw/refs/heads/master/rule/Clash/Copilot/Copilot.list"}
  ai3: {!!merge <<: *class, url: "https://github.com/blackmatrix7/ios_rule_script/raw/refs/heads/master/rule/Clash/Gemini/Gemini.list"}
  youtube_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  appletv: {!!merge <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/AppleTV/AppleTV.list"}
  applemusic: {!!merge <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/AppleMusic/AppleMusic.list"}
  google_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  github_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  telegram_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  onedrive_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple: {!!merge <<: *class, url: "https://github.com/blackmatrix7/ios_rule_script/raw/refs/heads/master/rule/Loon/Apple/Apple.list"}
  #apple_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  speedtest_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  dmm_domain: {!!merge <<: *class, url: "https://github.com/blackmatrix7/ios_rule_script/raw/refs/heads/master/rule/Loon/DMM/DMM.list"}
  tiktok_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  gfw_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: {!!merge <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  
  cn_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: {!!merge <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}